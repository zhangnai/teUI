/*
 * 表单元素和表单布局样式
 */

// Normalize non-controls
//
// Restyle and baseline non-control form elements.

fieldset {
  padding: 0;
  margin: 0;
  border: 0;
  // Chrome and Firefox set a `min-width: -webkit-min-content;` on fieldsets,
  // so we reset that to ensure it behaves more like a standard block element.
  // See https://github.com/twbs/bootstrap/issues/12359.
  min-width: 0;
}

legend {
  display: block;
  width: 100%;
  padding: 0;
  margin-bottom: @line-height-computed;
  font-size: (@font-size-base * 1.5);
  line-height: inherit;
  color: @legend-color;
  border: 0;
  border-bottom: 1px solid @legend-border-color;
}

label {
  display: inline-block;
  max-width: 100%; // Force IE8 to wrap long content (see https://github.com/twbs/bootstrap/issues/13141)
  margin-bottom: 5px;
  font-weight: @headings-font-weight;
  *font-weight: bold;
}



// Normalize form controls
//
// While most of our form styles require extra classes, some basic normalization
// is required to ensure optimum display with or without those classes to better
// address browser inconsistencies.


// Position radios and checkboxes better
input[type="radio"],
input[type="checkbox"]{
  //margin: 4px 0 0;
  //margin-top: 1px \9; // IE8-9
  position: relative;
  vertical-align: middle;
  margin-top: 0;
  top: -1px;
  *top: 0;
  line-height: normal;
 
}

// Set the height of file controls to match text inputs
input[type="file"] {
  display: block;
}

// Make range inputs behave like textual form controls
input[type="range"] {
  display: block;
  width: 100%;
}

// Make multiple select elements height not fixed
select[multiple],
select[size] {
  height: auto;
}

// Focus for file, radio, and checkbox
input[type="file"]:focus,
input[type="radio"]:focus,
input[type="checkbox"]:focus {
  .tab-focus();
}

// Adjust output element
output {
  display: block;
  padding-top: (@padding-base-vertical + 1);
  font-size: @font-size-base;
  line-height: @line-height-base;
  color: @input-color;
}

// Common form controls
//
// Shared size and type resets for form controls. Apply `.form-control` to any
// of the following form controls:
//
// select
// textarea
// input[type="text"]
// input[type="password"]
// input[type="datetime"]
// input[type="datetime-local"]
// input[type="date"]
// input[type="month"]
// input[type="time"]
// input[type="week"]
// input[type="number"]
// input[type="email"]
// input[type="url"]
// input[type="search"]
// input[type="tel"]
// input[type="color"]

.form-control {
  //display: block;
  //width: 100%;
  display: inline-block;
  height: @input-height-base - (@padding-base-vertical * 2) - 2; // Make inputs at least the height of their button counterpart (base line-height + padding + border)
  padding: @padding-base-vertical @padding-base-horizontal;
  width: @input-normal-length;
  font-size: @font-size-base;
  line-height: @line-height-base;
  color: @input-color;
  background-color: @input-bg;
  background-image: none; // Reset unusual Firefox-on-Android default style; see https://github.com/necolas/normalize.css/issues/214
  border: 1px solid @input-border;
  border-radius: @input-border-radius;
  .box-shadow(inset 0 1px 1px rgba(0,0,0,.075));
  .transition(~"border-color ease-in-out .15s, box-shadow ease-in-out .15s");

  // Customize the `:focus` state to imitate native WebKit styles.
  .form-control-focus();

  // Placeholder
  .placeholder();

  // Disabled and read-only inputs
  //
  // HTML5 says that controls under a fieldset > legend:first-child won't be
  // disabled if the fieldset is disabled. Due to implementation difficulty, we
  // don't honor that edge case; we style them as disabled anyway.
  &[disabled],
  &[readonly],
  fieldset[disabled] & {
    cursor: not-allowed;
    background-color: @input-bg-disabled;
    opacity: 1; // iOS fix for unreadable disabled content
  }

  // Reset height for `textarea`s
  textarea& {
    height: auto;
  }
  select&{
    //position: relative;
    //top: 1px;
    width: (@input-normal-length + (@padding-base-horizontal * 2) + 2);
    height: @input-height-base;
    line-height: (@input-height-base - 2);
    *font-family : Trebuchet MS;
    *border: 1px solid @input-border;
    padding: @padding-base-vertical ~"\9";
  }
}


//mixin for controlsets of .form-controls 
.input-length(@input-length){
  width: @input-length;
  select&{
    width: (@input-length + (@padding-base-horizontal * 2) + 2);
  }
}


//sizes of form-control input
.input-xxsmall{
  .input-length(@input-xxsmall-length);
}
.input-xsmall{
	.input-length(@input-xsmall-length);
}
.input-small{
	.input-length(@input-small-length);
}
.input-normal,
.input-default{
	.input-length(@input-normal-length);
}
.input-large{
	.input-length(@input-large-length);
}
.input-xlarge{
	.input-length(@input-xlarge-length);
}
.input-xxlarge{
	.input-length(@input-xxlarge-length);
}
.input-block{
	display: block;
	width: @input-block-length;
}
//style for select
.select-free{
  width: auto!important;
}
//for jQuery placeholder for IE plugin
.input-placeholder{
  	display: inline-block ~"\9";
  	position: relative;
  	label{
  		margin: 6px 0 0 8px!important;
  		margin: 6px 0 0 8px  ~"\9"!important;
  		*margin: 7px 0 0 8px!important;
  		font-weight: normal;
  		color: #a9a9a9!important;
  	}
  }


//选择框样式
.checkbox{
	margin: 0 5px 0 0;
	padding: 5px 0;
  font-weight: normal;
  *position: relative;
  *top: -1px;
	& > input[type="checkbox"],
	& > input[type="radio"]{
		margin-right: 4px;
    *height: 14px;
    *width: 14px;
		//*margin-right: 4px;
	}
}


//表单内文字和帮助文字
.char,.inline-label.help-inline{
  .char();
}
p.char{
  padding-top: 5px;
  margin-bottom: 0;
  line-height: 18px;
  height: auto!important;
}
.help-inline{
  margin-left: @padding-base-horizontal;
}
.help-block{
  margin: (@line-height-computed / 2) 0 0;
}


//表单错误提示
.pointout{
  .char();
  padding-left: 17px;
  position: relative;
  top: 1px;
  margin-left: 10px;
  &:before{
    position: absolute;
    top: 6px;
    left: 0;
  }
  &-success{
    color: @state-success-text;
    .has-icon(@fa-var-check-circle,@fa-ie-var-check-circle);
  }
  &-info{
    color: @state-info-text;
    .has-icon(@fa-var-info-circle,@fa-ie-var-info-circle);
  }
  &-warning{
    color: @state-warning-text;
    .has-icon(@fa-var-exclamation-circle,@fa-ie-var-exclamation-circle);
  }
  &-error{
    color: @state-danger-text;
    .has-icon(@fa-var-times-circle,@fa-ie-var-times-circle);
  }
}










